{"version":3,"sources":["assets/scripts/index.js"],"names":["main","elem","handl","calendar","daysList","document","querySelector","dayTemplate","now","Date","createDate","dateStr","dateArr","split","getCurrentDate","date","toLocaleDateString","weekday","year","month","day","slice","current","weekDay","formated","getMonthDaysCount","getDate","getFirstDayWeek","firstDay","getTitleDate","options","replace","dateObj","renderDays","nowObj","prevMonth","Object","assign","prevMonthDays","daysInMonth","i","Mon","Tue","Wed","Thu","Fri","Sat","Sun","appendDay","createDay","element","appendChild","number","obj","dayElement","content","cloneNode","dayNumber","textContent","setAttribute","numberFormat","classList","add","scheduleApp","tasks","taskDay","taskId","taskTime","taskTitle","taskMsg","elements","burger","navBar","form","formResetButton","addTaskButton","tasksList","taskTemplate","tasksTitle","handlers","burgerHandler","addEventListener","toggle","addTaskButtonHandler","openForm","removeEventListener","closeForm","formSubmit","buttonChange","remove","reset","opened","inputs","forms","addTask","event","preventDefault","value","taskPush","currentDay","removeAllElements","renderAll","tasksTitleUpdate","taskSpoiler","target","contains","closest","taskRemove","removeFromTasks","removeElement","daysStatusUpdate","daysHandler","getAttribute","dateExist","length","children","forEach","item","exist","task","generateTaskId","push","taskGenerate","card","taskRender","id","filter","Number","innerHTML","latestTaskId","startHandlers"],"mappings":"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","file":"scripts.7334512e.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\r\n\r\nlet main, elem, handl;\r\n\r\nconst calendar = {\r\n  daysList: document.querySelector('.days'),\r\n  dayTemplate: document.querySelector('#day'),\r\n  now() {\r\n    return new Date();\r\n  },\r\n  createDate(dateStr) {\r\n    const dateArr = dateStr.split('-');\r\n    return new Date(dateArr[0], dateArr[1] - 1, dateArr[2]);\r\n  },\r\n  getCurrentDate(now) {\r\n    const date = now ? now : this.now();\r\n    const options = {\r\n      weekday: 'long',\r\n      year: 'numeric',\r\n      month: '2-digit',\r\n      day: '2-digit'\r\n    };\r\n    const dateStr = date.toLocaleDateString('en-US', options);\r\n    const dateArr = dateStr.slice(-10).split('/');\r\n    const current = {\r\n      weekDay: dateStr.slice(0, -12),\r\n      day: dateArr[1],\r\n      month: dateArr[0],\r\n      year: dateArr[2],\r\n      formated() {\r\n        return `${this.year}-${this.month}-${this.day}`;\r\n      },\r\n    };\r\n    return current;\r\n  },\r\n  getMonthDaysCount(dateStr) {\r\n    const dateArr = dateStr.split('-');\r\n    return new Date(dateArr[0], dateArr[1], 0).getDate();\r\n  },\r\n  getFirstDayWeek(dateStr) {\r\n    const dateArr = dateStr.split('-');\r\n    const firstDay = new Date(dateArr[0], dateArr[1] - 1, 1);\r\n    return firstDay.toLocaleDateString('en-US', {\r\n      weekday: 'short'\r\n    });\r\n  },\r\n  getTitleDate(date) {\r\n    const options = {\r\n      weekday: 'long',\r\n      day: 'numeric',\r\n      month: 'long',\r\n    };\r\n    const dateStr = date.toLocaleDateString('en-US', options);\r\n    const dateArr = dateStr.replace(/,/gi, '').split(' ');\r\n    const dateObj = {\r\n      weekDay: dateArr[0],\r\n      day: dateArr[2],\r\n      month: dateArr[1],\r\n    };\r\n    return dateObj;\r\n  },\r\n  renderDays() {\r\n    const nowObj = this.getCurrentDate();\r\n\r\n    const prevMonth = `${nowObj.year}-${--Object.assign({}, nowObj).month}-01`;\r\n    // const nextMonth = `${nowObj.year}-${++Object.assign({}, nowObj).month}-01`;\r\n    const prevMonthDays = this.getMonthDaysCount(prevMonth);\r\n    const now = nowObj.formated();\r\n    const dayInWeekNum = {\r\n      Mon: 0,\r\n      Tue: 1,\r\n      Wed: 2,\r\n      Thu: 3,\r\n      Fri: 4,\r\n      Sat: 5,\r\n      Sun: 6,\r\n    };\r\n    const daysInMonth = this.getMonthDaysCount(now);\r\n    const startRenderAt = dayInWeekNum[this.getFirstDayWeek(now)];\r\n    for (let i = startRenderAt - 1; i >= 0; i--) {\r\n      this.appendDay(this.createDay(prevMonthDays - i));\r\n    }\r\n    for (let i = 1; i <= daysInMonth; i++) {\r\n      this.appendDay(this.createDay(i, nowObj));\r\n    }\r\n  },\r\n  appendDay(element) {\r\n    this.daysList.appendChild(element);\r\n  },\r\n  createDay(number, obj) {\r\n    const dayElement = this.dayTemplate.content.cloneNode(true).querySelector('.day');\r\n    const dayNumber = dayElement.querySelector('.day__number');\r\n    dayNumber.textContent = number;\r\n    if (obj) {\r\n      dayElement.setAttribute('date', `${obj.year}-${obj.month}-${this.numberFormat(number)}`);\r\n    } else {\r\n      dayNumber.classList.add('day__number__before', 'day__number__no-pointer');\r\n    }\r\n\r\n    return dayElement;\r\n  },\r\n  numberFormat(number) {\r\n    return number >= 10 ? number : `0${number}`;\r\n  },\r\n};\r\n\r\nconst scheduleApp = {\r\n  tasks: {\r\n    '2019-08-15': [{\r\n      taskDay: '2019-08-15',\r\n      taskId: 1,\r\n      taskTime: '01:01',\r\n      taskTitle: 'First',\r\n      taskMsg: 'First',\r\n    }, {\r\n      taskDay: '2019-08-15',\r\n      taskId: 2,\r\n      taskTime: '02:02',\r\n      taskTitle: 'Second',\r\n      taskMsg: 'Second'\r\n    }, {\r\n      taskDay: '2019-08-15',\r\n      taskId: 3,\r\n      taskTime: '00:00',\r\n      taskTitle: 'Third',\r\n      taskMsg: 'Third'\r\n    }],\r\n    '2019-08-31': [{\r\n      taskDay: '2019-08-31',\r\n      taskId: 4,\r\n      taskTime: '05:05',\r\n      taskTitle: 'First2',\r\n      taskMsg: 'First2'\r\n    }, {\r\n      taskDay: '2019-08-31',\r\n      taskId: 5,\r\n      taskTime: '06:06',\r\n      taskTitle: 'Second2',\r\n      taskMsg: 'Second2'\r\n    }, {\r\n      taskDay: '2019-08-31',\r\n      taskId: 6,\r\n      taskTime: '07:07',\r\n      taskTitle: 'Third3',\r\n      taskMsg: 'Third3'\r\n    }],\r\n  },\r\n  elements: {\r\n    burger: document.querySelector('.navbar-burger'),\r\n    navBar: document.querySelector('#navbarSchedule'),\r\n    form: document.querySelector('.form'),\r\n    formResetButton: document.querySelector('.form__reset-button'),\r\n    addTaskButton: document.querySelector('.add__task'),\r\n    tasksList: document.querySelector('.tasks'),\r\n    taskTemplate: document.querySelector('#task-template'),\r\n    daysList: document.querySelector('.days'),\r\n    tasksTitle: document.querySelector('.tasks__title'),\r\n  },\r\n  handlers: {\r\n    burgerHandler() {\r\n      elem.burger.addEventListener('click', () => {\r\n        elem.burger.classList.toggle('is-active');\r\n        elem.navBar.classList.toggle('is-active');\r\n      });\r\n    },\r\n    addTaskButtonHandler() {\r\n      elem.addTaskButton.addEventListener('click', handl.openForm);\r\n    },\r\n    openForm() {\r\n      elem.form.classList.add('form_opened');\r\n      elem.addTaskButton.removeEventListener('click', handl.openForm);\r\n      elem.addTaskButton.addEventListener('click', handl.closeForm);\r\n      elem.form.addEventListener('submit', handl.formSubmit);\r\n      handl.buttonChange(true);\r\n    },\r\n    closeForm() {\r\n      elem.form.classList.remove('form_opened');\r\n      elem.addTaskButton.removeEventListener('click', handl.closeForm);\r\n      elem.addTaskButton.addEventListener('click', handl.openForm);\r\n      elem.form.removeEventListener('submit', handl.formSubmit);\r\n      elem.form.reset();\r\n      handl.buttonChange();\r\n    },\r\n    buttonChange(opened) {\r\n      elem.addTaskButton.textContent = opened ? 'Close Form' : 'Add Task';\r\n    },\r\n    formSubmit() {\r\n      const inputs = document.forms.addTask.elements;\r\n      event.preventDefault();\r\n      const obj = {\r\n        taskDay: inputs.taskDay.value,\r\n        taskTime: inputs.taskTime.value,\r\n        taskTitle: inputs.taskTitle.value,\r\n        taskMsg: inputs.taskMsg.value\r\n      };\r\n      main.taskPush(obj);\r\n      if (main.currentDay === obj.taskDay) {\r\n        main.removeAllElements();\r\n        main.renderAll(obj.taskDay);\r\n        handl.tasksTitleUpdate(obj.taskDay, true);\r\n      }\r\n      handl.closeForm();\r\n    },\r\n    taskSpoiler() {\r\n      elem.tasksList.addEventListener('click', (event) => {\r\n        if (event.target.classList.contains('task__spoiler')) {\r\n          const card = event.target.closest('.task');\r\n          const footer = card.querySelector('.task__footer');\r\n          footer.classList.toggle('visible');\r\n        }\r\n      });\r\n    },\r\n    taskRemove() {\r\n      elem.tasksList.addEventListener('click', (event) => {\r\n        if (event.target.classList.contains('task__delete')) {\r\n          main.removeFromTasks(event.target);\r\n          main.removeElement(event.target);\r\n          handl.daysStatusUpdate();\r\n        }\r\n      });\r\n    },\r\n    currentDay: '',\r\n    daysHandler() {\r\n      elem.daysList.addEventListener('click', (event) => {\r\n        if (event.target.classList.contains('day__number') &&\r\n          !event.target.classList.contains('day__number__before')) {\r\n          const day = event.target.closest('.day');\r\n          const date = day.getAttribute('date');\r\n          main.removeAllElements();\r\n          main.renderAll(date);\r\n          main.currentDay = date;\r\n          const dateExist = main.tasks[date];\r\n          if (dateExist && dateExist.length > 0) {\r\n            handl.tasksTitleUpdate(date, true);\r\n          } else {\r\n            handl.tasksTitleUpdate(date, false);\r\n          }\r\n        }\r\n      });\r\n    },\r\n    daysStatusUpdate() {\r\n      [...elem.daysList.children].forEach((item) => {\r\n        const dayNumber = item.querySelector('.day__number');\r\n        // const date = item.getAttribute('date');\r\n        const dateExist = main.tasks[item.getAttribute('date')];\r\n        if (dateExist && dateExist.length > 0) {\r\n          dayNumber.classList.add('day__number__has');\r\n        } else if (dateExist && dateExist.length === 0) {\r\n          dayNumber.classList.remove('day__number__has');\r\n        } else {\r\n          dayNumber.classList.remove('day__number__has');\r\n        }\r\n      });\r\n    },\r\n    tasksTitleUpdate(date, exist) {\r\n      const dateObj = calendar.getTitleDate(calendar.createDate(date));\r\n      if (exist) {\r\n        elem.tasksTitle.textContent =\r\n          `Your Tasks on ${dateObj.weekDay} ${dateObj.day} ${dateObj.month}`;\r\n      } else {\r\n        elem.tasksTitle.textContent =\r\n          `You have no tasks on ${dateObj.weekDay} ${dateObj.day} ${dateObj.month}`;\r\n      }\r\n    },\r\n  },\r\n  taskPush(obj) {\r\n    const task = Object.assign({\r\n      taskId: this.generateTaskId()\r\n    }, obj);\r\n    if (!this.tasks[obj.taskDay]) {\r\n      this.tasks[obj.taskDay] = [task];\r\n    } else {\r\n      this.tasks[obj.taskDay].push(task);\r\n    }\r\n    handl.daysStatusUpdate();\r\n  },\r\n  taskGenerate(obj) {\r\n    const card = elem.taskTemplate.content.cloneNode(true).querySelector('.card');\r\n    const taskTime = card.querySelector('.task__time');\r\n    const taskTitle = card.querySelector('.task__header-title');\r\n    const taskMsg = card.querySelector('.content');\r\n    card.setAttribute('task-id', obj.taskId);\r\n    card.setAttribute('task-date', obj.taskDay);\r\n    taskTime.textContent = obj.taskTime;\r\n    taskTitle.textContent = obj.taskTitle;\r\n    taskMsg.textContent = obj.taskMsg;\r\n    return card;\r\n  },\r\n  taskRender(card) {\r\n    elem.tasksList.appendChild(card);\r\n  },\r\n  renderAll(date) {\r\n    if (this.tasks[date]) {\r\n      const tasks = this.tasks[date];\r\n      for (const task of tasks) {\r\n        this.taskRender(this.taskGenerate(task));\r\n      }\r\n    }\r\n  },\r\n  removeFromTasks(element) {\r\n    const card = element.closest('.card');\r\n    const date = card.getAttribute('task-date');\r\n    const id = card.getAttribute('task-id');\r\n    this.tasks[date] = this.tasks[date].filter((item) => item.taskId !== Number(id));\r\n  },\r\n  removeElement(element) {\r\n    element.closest('.card').remove();\r\n  },\r\n  removeAllElements() {\r\n    elem.tasksList.innerHTML = '';\r\n  },\r\n  latestTaskId: 6,\r\n  generateTaskId() {\r\n    return ++this.latestTaskId;\r\n  },\r\n  startHandlers() {\r\n    main = this;\r\n    elem = this.elements;\r\n    handl = this.handlers;\r\n\r\n    handl.burgerHandler();\r\n    handl.addTaskButtonHandler();\r\n    handl.taskSpoiler();\r\n    handl.taskRemove();\r\n    handl.daysHandler();\r\n    handl.daysStatusUpdate();\r\n  },\r\n};\r\n\r\n\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n  calendar.renderDays();\r\n  scheduleApp.startHandlers();\r\n});"]}