{"version":3,"sources":["assets/scripts/index.js"],"names":["that","elem","handl","scheduleApp","tasks","taskDay","taskId","taskTime","taskTitle","taskMsg","elements","burger","document","querySelector","navBar","form","formResetButton","addTaskButton","tasksList","taskTemplate","daysList","handlers","burgerHandler","addEventListener","classList","toggle","addTaskButtonHandler","openForm","add","removeEventListener","closeForm","formSubmit","buttonChange","remove","opened","textContent","inputs","forms","addTask","event","preventDefault","obj","value","taskPush","taskSpoiler","target","contains","closest","taskRemove","removeFromTasks","removeElement","daysStatusUpdate","daysHandler","day","removeAllElements","renderAll","getAttribute","children","forEach","item","dayNumber","date","length","task","Object","assign","generateTaskId","push","taskRender","taskGenerate","card","content","cloneNode","setAttribute","appendChild","console","log","element","id","filter","Number","innerHTML","latestTaskId","startHandlers","calendar","dayTemplate","now","Date","createDate","dateStr","dateArr","split","getCurrentDate","toLocaleDateString","weekday","year","month","slice","current","weekDay","formated","getMonthDaysCount","getDate","getFirstDayWeek","firstDay","renderDays","nowObj","prevMonth","prevMonthDays","daysInMonth","i","Mon","Tue","Wed","Thu","Fri","Sat","Sun","appendDay","createDay","number","dayElement","numberFormat"],"mappings":"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","file":"scripts.c7f701ae.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\r\n\r\nlet that, elem, handl;\r\n\r\nconst scheduleApp = {\r\n  tasks: {\r\n    '2019-08-15': [{\r\n      taskDay: '2019-08-15',\r\n      taskId: 1,\r\n      taskTime: '01:01',\r\n      taskTitle: 'lul',\r\n      taskMsg: 'lul',\r\n    }, {\r\n      taskDay: '2019-08-15',\r\n      taskId: 2,\r\n      taskTime: '02:02',\r\n      taskTitle: 'kek',\r\n      taskMsg: 'kek'\r\n    }, {\r\n      taskDay: '2019-08-15',\r\n      taskId: 3,\r\n      taskTime: '00:00',\r\n      taskTitle: 'azaza',\r\n      taskMsg: 'azaza'\r\n    }],\r\n    '2019-08-31': [{\r\n      taskDay: '2019-08-31',\r\n      taskId: 4,\r\n      taskTime: '05:05',\r\n      taskTitle: 'lul5',\r\n      taskMsg: 'lul5'\r\n    }, {\r\n      taskDay: '2019-08-31',\r\n      taskId: 5,\r\n      taskTime: '06:06',\r\n      taskTitle: 'kek6',\r\n      taskMsg: 'kek6'\r\n    }, {\r\n      taskDay: '2019-08-31',\r\n      taskId: 6,\r\n      taskTime: '07:07',\r\n      taskTitle: 'azaza7',\r\n      taskMsg: 'azaza7'\r\n    }],\r\n  },\r\n  elements: {\r\n    burger: document.querySelector('.navbar-burger'),\r\n    navBar: document.querySelector('#navbarSchedule'),\r\n    form: document.querySelector('.form'),\r\n    formResetButton: document.querySelector('.form__reset-button'),\r\n    addTaskButton: document.querySelector('.add__task'),\r\n    tasksList: document.querySelector('.tasks'),\r\n    taskTemplate: document.querySelector('#task-template'),\r\n    daysList: document.querySelector('.days'),\r\n  },\r\n  handlers: {\r\n    burgerHandler() {\r\n      elem.burger.addEventListener('click', () => {\r\n        elem.burger.classList.toggle('is-active');\r\n        elem.navBar.classList.toggle('is-active');\r\n      });\r\n    },\r\n    addTaskButtonHandler() {\r\n      elem.addTaskButton.addEventListener('click', handl.openForm);\r\n    },\r\n    openForm() {\r\n      elem.form.classList.add('form_opened');\r\n      elem.addTaskButton.removeEventListener('click', handl.openForm);\r\n      elem.addTaskButton.addEventListener('click', handl.closeForm);\r\n      elem.form.addEventListener('submit', handl.formSubmit);\r\n      handl.buttonChange(true);\r\n    },\r\n    closeForm() {\r\n      elem.form.classList.remove('form_opened');\r\n      elem.addTaskButton.removeEventListener('click', handl.closeForm);\r\n      elem.addTaskButton.addEventListener('click', handl.openForm);\r\n      elem.form.removeEventListener('submit', handl.formSubmit);\r\n      handl.buttonChange();\r\n    },\r\n    buttonChange(opened) {\r\n      elem.addTaskButton.textContent = opened ? 'Close Form' : 'Add Task';\r\n    },\r\n    formSubmit() {\r\n      const inputs = document.forms.addTask.elements;\r\n      event.preventDefault();\r\n      const obj = {\r\n        taskDay: inputs.taskDay.value,\r\n        taskTime: inputs.taskTime.value,\r\n        taskTitle: inputs.taskTitle.value,\r\n        taskMsg: inputs.taskMsg.value\r\n      };\r\n      that.taskPush(obj);\r\n    },\r\n    taskSpoiler() {\r\n      elem.tasksList.addEventListener('click', (event) => {\r\n        if (event.target.classList.contains('task__spoiler')) {\r\n          const card = event.target.closest('.task');\r\n          const footer = card.querySelector('.task__footer');\r\n          footer.classList.toggle('visible');\r\n        }\r\n      });\r\n    },\r\n    taskRemove() {\r\n      elem.tasksList.addEventListener('click', (event) => {\r\n        if (event.target.classList.contains('task__delete')) {\r\n          that.removeFromTasks(event.target);\r\n          that.removeElement(event.target);\r\n          handl.daysStatusUpdate();\r\n        }\r\n      });\r\n    },\r\n    daysHandler() {\r\n      elem.daysList.addEventListener('click', (event) => {\r\n        if (event.target.classList.contains('day__number')) {\r\n          const day = event.target.closest('.day');\r\n          that.removeAllElements();\r\n          that.renderAll(day.getAttribute('date'));\r\n        }\r\n      });\r\n    },\r\n    daysStatusUpdate() {\r\n      [...elem.daysList.children].forEach((item) => {\r\n        const dayNumber = item.querySelector('.day__number');\r\n        const date = that.tasks[item.getAttribute('date')];\r\n        if (date && date.length > 0) {\r\n          dayNumber.classList.add('day__number__has');\r\n        } else {\r\n          dayNumber.classList.remove('day__number__has');\r\n        }\r\n      });\r\n    },\r\n  },\r\n  taskPush(obj) {\r\n    const task = Object.assign({\r\n      taskId: this.generateTaskId()\r\n    }, obj);\r\n    if (!this.tasks[obj.taskDay]) {\r\n      this.tasks[obj.taskDay] = [task];\r\n    } else {\r\n      this.tasks[obj.taskDay].push(task);\r\n    }\r\n    this.taskRender(this.taskGenerate(task));\r\n    handl.daysStatusUpdate();\r\n  },\r\n  taskGenerate(obj) {\r\n    const card = elem.taskTemplate.content.cloneNode(true).querySelector('.card');\r\n    const taskTime = card.querySelector('.task__time');\r\n    const taskTitle = card.querySelector('.task__header-title');\r\n    const taskMsg = card.querySelector('.content');\r\n    card.setAttribute('task-id', obj.taskId);\r\n    card.setAttribute('task-date', obj.taskDay);\r\n    taskTime.textContent = obj.taskTime;\r\n    taskTitle.textContent = obj.taskTitle;\r\n    taskMsg.textContent = obj.taskMsg;\r\n    return card;\r\n  },\r\n  taskRender(card) {\r\n    elem.tasksList.appendChild(card);\r\n  },\r\n  renderAll(date) {\r\n    if (this.tasks[date]) {\r\n      const tasks = this.tasks[date];\r\n      for (const task of tasks) {\r\n        this.taskRender(this.taskGenerate(task));\r\n      }\r\n    } else {\r\n      console.log('Нет предметов на этот день');\r\n    }\r\n  },\r\n  removeFromTasks(element) {\r\n    const card = element.closest('.card');\r\n    const date = card.getAttribute('task-date');\r\n    const id = card.getAttribute('task-id');\r\n    this.tasks[date] = this.tasks[date].filter((item) => item.taskId !== Number(id));\r\n  },\r\n  removeElement(element) {\r\n    element.closest('.card').remove();\r\n  },\r\n  removeAllElements() {\r\n    elem.tasksList.innerHTML = '';\r\n  },\r\n  latestTaskId: 6,\r\n  generateTaskId() {\r\n    return ++this.latestTaskId;\r\n  },\r\n  startHandlers() {\r\n    that = this;\r\n    elem = this.elements;\r\n    handl = this.handlers;\r\n\r\n    handl.burgerHandler();\r\n    handl.addTaskButtonHandler();\r\n    handl.taskSpoiler();\r\n    handl.taskRemove();\r\n    handl.daysHandler();\r\n    handl.daysStatusUpdate();\r\n  },\r\n};\r\n\r\nconst calendar = {\r\n  daysList: document.querySelector('.days'),\r\n  dayTemplate: document.querySelector('#day'),\r\n  now() {\r\n    return new Date();\r\n  },\r\n  createDate(dateStr) {\r\n    const dateArr = dateStr.split('-');\r\n    return new Date(dateArr[0], dateArr[1] - 1, dateArr[2]);\r\n  },\r\n  getCurrentDate(now) {\r\n    const date = now ? now : this.now();\r\n    const options = {\r\n      weekday: 'long',\r\n      year: 'numeric',\r\n      month: '2-digit',\r\n      day: '2-digit'\r\n    };\r\n    const dateStr = date.toLocaleDateString('en-US', options);\r\n    const dateArr = dateStr.slice(-10).split('/');\r\n    const current = {\r\n      weekDay: dateStr.slice(0, -12),\r\n      day: dateArr[1],\r\n      month: dateArr[0],\r\n      year: dateArr[2],\r\n      formated() {\r\n        return `${this.year}-${this.month}-${this.day}`;\r\n      },\r\n    };\r\n    return current;\r\n  },\r\n  getMonthDaysCount(dateStr) {\r\n    const dateArr = dateStr.split('-');\r\n    return new Date(dateArr[0], dateArr[1], 0).getDate();\r\n  },\r\n  getFirstDayWeek(dateStr) {\r\n    const dateArr = dateStr.split('-');\r\n    const firstDay = new Date(dateArr[0], dateArr[1] - 1, 1);\r\n    return firstDay.toLocaleDateString('en-US', {\r\n      weekday: 'short'\r\n    });\r\n  },\r\n  renderDays() {\r\n    const nowObj = this.getCurrentDate();\r\n\r\n    const prevMonth = `${nowObj.year}-${--Object.assign({}, nowObj).month}-01`;\r\n    // const nextMonth = `${nowObj.year}-${++Object.assign({}, nowObj).month}-01`;\r\n    const prevMonthDays = this.getMonthDaysCount(prevMonth);\r\n    const now = nowObj.formated();\r\n    const dayInWeekNum = {\r\n      Mon: 0,\r\n      Tue: 1,\r\n      Wed: 2,\r\n      Thu: 3,\r\n      Fri: 4,\r\n      Sat: 5,\r\n      Sun: 6,\r\n    };\r\n    const daysInMonth = this.getMonthDaysCount(now);\r\n    const startRenderAt = dayInWeekNum[this.getFirstDayWeek(now)];\r\n    for (let i = startRenderAt - 1; i >= 0; i--) {\r\n      this.appendDay(this.createDay(prevMonthDays - i));\r\n    }\r\n    for (let i = 1; i <= daysInMonth; i++) {\r\n      this.appendDay(this.createDay(i, nowObj));\r\n    }\r\n  },\r\n  appendDay(element) {\r\n    this.daysList.appendChild(element);\r\n  },\r\n  createDay(number, obj) {\r\n    const dayElement = this.dayTemplate.content.cloneNode(true).querySelector('.day');\r\n    const dayNumber = dayElement.querySelector('.day__number');\r\n    dayNumber.textContent = number;\r\n    if (obj) {\r\n      dayElement.setAttribute('date', `${obj.year}-${obj.month}-${this.numberFormat(number)}`);\r\n    } else {\r\n      dayNumber.classList.add('day__number__before', 'day__number__no-pointer');\r\n    }\r\n\r\n    return dayElement;\r\n  },\r\n  numberFormat(number) {\r\n    return number >= 10 ? number : `0${number}`;\r\n  },\r\n};\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n  calendar.renderDays();\r\n  scheduleApp.startHandlers();\r\n});"]}